{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction ScrollArea({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.Root>) {\n  return (\n    <ScrollAreaPrimitive.Root\n      data-slot=\"scroll-area\"\n      className={cn(\"relative\", className)}\n      {...props}\n    >\n      <ScrollAreaPrimitive.Viewport\n        data-slot=\"scroll-area-viewport\"\n        className=\"focus-visible:ring-ring/50 size-full rounded-[inherit] transition-[color,box-shadow] outline-none focus-visible:ring-[3px] focus-visible:outline-1\"\n      >\n        {children}\n      </ScrollAreaPrimitive.Viewport>\n      <ScrollBar />\n      <ScrollAreaPrimitive.Corner />\n    </ScrollAreaPrimitive.Root>\n  )\n}\n\nfunction ScrollBar({\n  className,\n  orientation = \"vertical\",\n  ...props\n}: React.ComponentProps<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>) {\n  return (\n    <ScrollAreaPrimitive.ScrollAreaScrollbar\n      data-slot=\"scroll-area-scrollbar\"\n      orientation={orientation}\n      className={cn(\n        \"flex touch-none p-px transition-colors select-none\",\n        orientation === \"vertical\" &&\n          \"h-full w-2.5 border-l border-l-transparent\",\n        orientation === \"horizontal\" &&\n          \"h-2.5 flex-col border-t border-t-transparent\",\n        className\n      )}\n      {...props}\n    >\n      <ScrollAreaPrimitive.ScrollAreaThumb\n        data-slot=\"scroll-area-thumb\"\n        className=\"bg-border relative flex-1 rounded-full\"\n      />\n    </ScrollAreaPrimitive.ScrollAreaScrollbar>\n  )\n}\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,WAAW,EAClB,SAAS,EACT,QAAQ,EACR,GAAG,OACmD;IACtD,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QACzB,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAC3B,aAAU;gBACV,WAAU;0BAET;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;AAGjC;KArBS;AAuBT,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,UAAU,EACxB,GAAG,OACkE;IACrE,qBACE,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,aAAU;QACV,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA,gBAAgB,cACd,8CACF,gBAAgB,gBACd,gDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAClC,aAAU;YACV,WAAU;;;;;;;;;;;AAIlB;MAzBS","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Separator({\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {\n  return (\n    <SeparatorPrimitive.Root\n      data-slot=\"separator-root\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,YAAY,EAC1B,aAAa,IAAI,EACjB,GAAG,OACkD;IACrD,qBACE,6LAAC,wKAAA,CAAA,OAAuB;QACtB,aAAU;QACV,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kKACA;QAED,GAAG,KAAK;;;;;;AAGf;KAlBS","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ChatSidebar.tsx"],"sourcesContent":["'use client'\n\nimport Link from 'next/link'\nimport { useState, useEffect } from 'react'\nimport { ScrollArea } from '@/components/ui/scroll-area'\nimport { Separator } from '@/components/ui/separator'\n\ninterface Chat {\n  id: string\n  name: string\n  lastMessage: string\n  timestamp: string\n  unread?: number\n}\n\ninterface ChatSidebarProps {\n  selectedChatId?: string\n}\n\nexport default function ChatSidebar({ selectedChatId }: ChatSidebarProps) {\n  const [chats, setChats] = useState<Chat[]>([])\n\n  useEffect(() => {\n    // Mock chat data\n    const mockChats: Chat[] = [\n      {\n        id: '1',\n        name: 'Alice Johnson',\n        lastMessage: 'Hey! How are you doing?',\n        timestamp: '2:30 PM',\n        unread: 2\n      },\n      {\n        id: '2',\n        name: 'Bob Smith',\n        lastMessage: 'Thanks for the help yesterday',\n        timestamp: '1:15 PM'\n      },\n      {\n        id: '3',\n        name: 'Carol Davis',\n        lastMessage: 'See you at the meeting tomorrow',\n        timestamp: '12:45 PM'\n      },\n      {\n        id: '4',\n        name: 'David Wilson',\n        lastMessage: 'The project looks great!',\n        timestamp: '11:30 AM',\n        unread: 1\n      },\n      {\n        id: '5',\n        name: 'Emma Brown',\n        lastMessage: 'Can you send me the files?',\n        timestamp: 'Yesterday'\n      },\n      {\n        id: '6',\n        name: 'Frank Miller',\n        lastMessage: 'Perfect, let\\'s do it',\n        timestamp: 'Yesterday'\n      },\n      {\n        id: '7',\n        name: 'Grace Lee',\n        lastMessage: 'Happy birthday! 🎉',\n        timestamp: 'Monday'\n      }\n    ]\n    setChats(mockChats)\n  }, [])\n\n  return (\n    <div className=\"w-80 bg-white border-r border-gray-200 flex flex-col h-full\">\n      {/* Header */}\n      <div className=\"p-4 border-b border-gray-200\">\n        <h1 className=\"text-xl font-semibold text-gray-900\">Chats</h1>\n      </div>\n\n      {/* Chat List */}\n      <ScrollArea className=\"flex-1\">\n        <div className=\"p-2\">\n          {chats.map((chat, index) => (\n            <div key={chat.id}>\n              <Link href={`/chats/${chat.id}`}>\n                <div\n                  className={`p-3 rounded-lg cursor-pointer transition-colors hover:bg-gray-50 ${\n                    selectedChatId === chat.id ? 'bg-gray-100' : ''\n                  }`}\n                >\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"flex items-center justify-between mb-1\">\n                        <h3 className=\"font-medium text-gray-900 truncate\">\n                          {chat.name}\n                        </h3>\n                        <span className=\"text-xs text-gray-500 ml-2\">\n                          {chat.timestamp}\n                        </span>\n                      </div>\n                      <div className=\"flex items-center justify-between\">\n                        <p className=\"text-sm text-gray-600 truncate\">\n                          {chat.lastMessage}\n                        </p>\n                        {chat.unread && (\n                          <span className=\"ml-2 bg-green-500 text-white text-xs rounded-full px-2 py-1 min-w-[20px] text-center\">\n                            {chat.unread}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </Link>\n              {index < chats.length - 1 && <Separator className=\"my-1\" />}\n            </div>\n          ))}\n        </div>\n      </ScrollArea>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAmBe,SAAS,YAAY,EAAE,cAAc,EAAoB;;IACtE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IAE7C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,iBAAiB;YACjB,MAAM,YAAoB;gBACxB;oBACE,IAAI;oBACJ,MAAM;oBACN,aAAa;oBACb,WAAW;oBACX,QAAQ;gBACV;gBACA;oBACE,IAAI;oBACJ,MAAM;oBACN,aAAa;oBACb,WAAW;gBACb;gBACA;oBACE,IAAI;oBACJ,MAAM;oBACN,aAAa;oBACb,WAAW;gBACb;gBACA;oBACE,IAAI;oBACJ,MAAM;oBACN,aAAa;oBACb,WAAW;oBACX,QAAQ;gBACV;gBACA;oBACE,IAAI;oBACJ,MAAM;oBACN,aAAa;oBACb,WAAW;gBACb;gBACA;oBACE,IAAI;oBACJ,MAAM;oBACN,aAAa;oBACb,WAAW;gBACb;gBACA;oBACE,IAAI;oBACJ,MAAM;oBACN,aAAa;oBACb,WAAW;gBACb;aACD;YACD,SAAS;QACX;gCAAG,EAAE;IAEL,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAG,WAAU;8BAAsC;;;;;;;;;;;0BAItD,6LAAC,6IAAA,CAAA,aAAU;gBAAC,WAAU;0BACpB,cAAA,6LAAC;oBAAI,WAAU;8BACZ,MAAM,GAAG,CAAC,CAAC,MAAM,sBAChB,6LAAC;;8CACC,6LAAC,+JAAA,CAAA,UAAI;oCAAC,MAAM,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;8CAC7B,cAAA,6LAAC;wCACC,WAAW,CAAC,iEAAiE,EAC3E,mBAAmB,KAAK,EAAE,GAAG,gBAAgB,IAC7C;kDAEF,cAAA,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAG,WAAU;0EACX,KAAK,IAAI;;;;;;0EAEZ,6LAAC;gEAAK,WAAU;0EACb,KAAK,SAAS;;;;;;;;;;;;kEAGnB,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAE,WAAU;0EACV,KAAK,WAAW;;;;;;4DAElB,KAAK,MAAM,kBACV,6LAAC;gEAAK,WAAU;0EACb,KAAK,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCAQzB,QAAQ,MAAM,MAAM,GAAG,mBAAK,6LAAC,wIAAA,CAAA,YAAS;oCAAC,WAAU;;;;;;;2BA/B1C,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;AAsC7B;GAvGwB;KAAA","debugId":null}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 420, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ChatHeader.tsx"],"sourcesContent":["'use client'\n\nimport Link from 'next/link'\nimport { Button } from '@/components/ui/button'\n\ninterface ChatHeaderProps {\n  contactName: string\n  onBack?: () => void\n}\n\nexport default function ChatHeader({ contactName, onBack }: ChatHeaderProps) {\n  return (\n    <div className=\"bg-white border-b border-gray-200 p-4 flex items-center justify-between\">\n      <div className=\"flex items-center space-x-3\">\n        <Link href=\"/chats\">\n          <Button variant=\"ghost\" size=\"sm\" className=\"text-gray-600 hover:text-gray-900\">\n            ← Back\n          </Button>\n        </Link>\n        <div>\n          <h2 className=\"font-semibold text-gray-900\">{contactName}</h2>\n          <p className=\"text-sm text-green-600\">Online</p>\n        </div>\n      </div>\n      <div className=\"flex items-center space-x-2\">\n        <Button variant=\"ghost\" size=\"sm\" className=\"text-gray-600 hover:text-gray-900\">\n          Call\n        </Button>\n        <Button variant=\"ghost\" size=\"sm\" className=\"text-gray-600 hover:text-gray-900\">\n          Video\n        </Button>\n        <Button variant=\"ghost\" size=\"sm\" className=\"text-gray-600 hover:text-gray-900\">\n          Info\n        </Button>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAUe,SAAS,WAAW,EAAE,WAAW,EAAE,MAAM,EAAmB;IACzE,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,+JAAA,CAAA,UAAI;wBAAC,MAAK;kCACT,cAAA,6LAAC,qIAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAQ,MAAK;4BAAK,WAAU;sCAAoC;;;;;;;;;;;kCAIlF,6LAAC;;0CACC,6LAAC;gCAAG,WAAU;0CAA+B;;;;;;0CAC7C,6LAAC;gCAAE,WAAU;0CAAyB;;;;;;;;;;;;;;;;;;0BAG1C,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,qIAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAQ,MAAK;wBAAK,WAAU;kCAAoC;;;;;;kCAGhF,6LAAC,qIAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAQ,MAAK;wBAAK,WAAU;kCAAoC;;;;;;kCAGhF,6LAAC,qIAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAQ,MAAK;wBAAK,WAAU;kCAAoC;;;;;;;;;;;;;;;;;;AAMxF;KA3BwB","debugId":null}},
    {"offset": {"line": 542, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ChatMessage.tsx"],"sourcesContent":["'use client'\n\ninterface ChatMessageProps {\n  message: string\n  sender: 'self' | 'other'\n  timestamp: string\n  senderName?: string\n}\n\nexport default function ChatMessage({ message, sender, timestamp, senderName }: ChatMessageProps) {\n  const isSelf = sender === 'self'\n\n  return (\n    <div className={`flex mb-4 ${isSelf ? 'justify-end' : 'justify-start'}`}>\n      <div className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${\n        isSelf \n          ? 'bg-green-500 text-white' \n          : 'bg-white text-gray-900 border border-gray-200'\n      }`}>\n        {!isSelf && senderName && (\n          <p className=\"text-xs font-medium text-gray-600 mb-1\">{senderName}</p>\n        )}\n        <p className=\"text-sm\">{message}</p>\n        <p className={`text-xs mt-1 ${\n          isSelf ? 'text-green-100' : 'text-gray-500'\n        }`}>\n          {timestamp}\n        </p>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;;AASe,SAAS,YAAY,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAoB;IAC9F,MAAM,SAAS,WAAW;IAE1B,qBACE,6LAAC;QAAI,WAAW,CAAC,UAAU,EAAE,SAAS,gBAAgB,iBAAiB;kBACrE,cAAA,6LAAC;YAAI,WAAW,CAAC,0CAA0C,EACzD,SACI,4BACA,iDACJ;;gBACC,CAAC,UAAU,4BACV,6LAAC;oBAAE,WAAU;8BAA0C;;;;;;8BAEzD,6LAAC;oBAAE,WAAU;8BAAW;;;;;;8BACxB,6LAAC;oBAAE,WAAW,CAAC,aAAa,EAC1B,SAAS,mBAAmB,iBAC5B;8BACC;;;;;;;;;;;;;;;;;AAKX;KAtBwB","debugId":null}},
    {"offset": {"line": 603, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 635, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ChatInput.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\n\ninterface ChatInputProps {\n  onSendMessage: (message: string) => void\n  disabled?: boolean\n}\n\nexport default function ChatInput({ onSendMessage, disabled = false }: ChatInputProps) {\n  const [message, setMessage] = useState('')\n  const [error, setError] = useState('')\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n    setError('')\n\n    if (!message.trim()) {\n      setError('Please enter a message')\n      return\n    }\n\n    if (message.trim().length > 1000) {\n      setError('Message is too long (max 1000 characters)')\n      return\n    }\n\n    try {\n      onSendMessage(message.trim())\n      setMessage('')\n    } catch (err) {\n      setError('Failed to send message. Please try again.')\n    }\n  }\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault()\n      handleSubmit(e)\n    }\n  }\n\n  return (\n    <div className=\"bg-white border-t border-gray-200 p-4\">\n      {error && (\n        <div className=\"mb-2 text-sm text-red-600 bg-red-50 p-2 rounded-md\">\n          {error}\n        </div>\n      )}\n      <form onSubmit={handleSubmit} className=\"flex space-x-2\">\n        <Input\n          type=\"text\"\n          placeholder=\"Type a message...\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          onKeyPress={handleKeyPress}\n          disabled={disabled}\n          className=\"flex-1\"\n          maxLength={1000}\n        />\n        <Button \n          type=\"submit\" \n          disabled={disabled || !message.trim()}\n          className=\"bg-green-500 hover:bg-green-600 text-white\"\n        >\n          Send\n        </Button>\n      </form>\n      <div className=\"mt-1 text-xs text-gray-500 text-right\">\n        {message.length}/1000\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAWe,SAAS,UAAU,EAAE,aAAa,EAAE,WAAW,KAAK,EAAkB;;IACnF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,SAAS;QAET,IAAI,CAAC,QAAQ,IAAI,IAAI;YACnB,SAAS;YACT;QACF;QAEA,IAAI,QAAQ,IAAI,GAAG,MAAM,GAAG,MAAM;YAChC,SAAS;YACT;QACF;QAEA,IAAI;YACF,cAAc,QAAQ,IAAI;YAC1B,WAAW;QACb,EAAE,OAAO,KAAK;YACZ,SAAS;QACX;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,IAAI,EAAE,GAAG,KAAK,WAAW,CAAC,EAAE,QAAQ,EAAE;YACpC,EAAE,cAAc;YAChB,aAAa;QACf;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;YACZ,uBACC,6LAAC;gBAAI,WAAU;0BACZ;;;;;;0BAGL,6LAAC;gBAAK,UAAU;gBAAc,WAAU;;kCACtC,6LAAC,oIAAA,CAAA,QAAK;wBACJ,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;wBAC1C,YAAY;wBACZ,UAAU;wBACV,WAAU;wBACV,WAAW;;;;;;kCAEb,6LAAC,qIAAA,CAAA,SAAM;wBACL,MAAK;wBACL,UAAU,YAAY,CAAC,QAAQ,IAAI;wBACnC,WAAU;kCACX;;;;;;;;;;;;0BAIH,6LAAC;gBAAI,WAAU;;oBACZ,QAAQ,MAAM;oBAAC;;;;;;;;;;;;;AAIxB;GAhEwB;KAAA","debugId":null}},
    {"offset": {"line": 752, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/chats/%5Bid%5D/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, useRef } from 'react'\nimport { useRouter, useParams } from 'next/navigation'\nimport ChatSidebar from '@/components/ChatSidebar'\nimport ChatHeader from '@/components/ChatHeader'\nimport ChatMessage from '@/components/ChatMessage'\nimport ChatInput from '@/components/ChatInput'\nimport { ScrollArea } from '@/components/ui/scroll-area'\n\ninterface Message {\n  id: string\n  text: string\n  sender: 'self' | 'other'\n  timestamp: string\n  senderName?: string\n}\n\ninterface Contact {\n  id: string\n  name: string\n}\n\nexport default function ChatRoom() {\n  const params = useParams()\n  const router = useRouter()\n  const chatId = params.id as string\n  const [user, setUser] = useState<{ email: string; name: string } | null>(null)\n  const [contact, setContact] = useState<Contact | null>(null)\n  const [messages, setMessages] = useState<Message[]>([])\n  const [isLoading, setIsLoading] = useState(true)\n  const messagesEndRef = useRef<HTMLDivElement>(null)\n\n  // Mock contacts data\n  const contacts: Record<string, Contact> = {\n    '1': { id: '1', name: 'Alice Johnson' },\n    '2': { id: '2', name: 'Bob Smith' },\n    '3': { id: '3', name: 'Carol Davis' },\n    '4': { id: '4', name: 'David Wilson' },\n    '5': { id: '5', name: 'Emma Brown' },\n    '6': { id: '6', name: 'Frank Miller' },\n    '7': { id: '7', name: 'Grace Lee' }\n  }\n\n  // Mock messages data\n  const mockMessages: Record<string, Message[]> = {\n    '1': [\n      { id: '1', text: 'Hey! How are you doing?', sender: 'other', timestamp: '2:25 PM', senderName: 'Alice Johnson' },\n      { id: '2', text: 'I\\'m doing great, thanks! How about you?', sender: 'self', timestamp: '2:26 PM' },\n      { id: '3', text: 'Pretty good! Just working on some projects', sender: 'other', timestamp: '2:27 PM', senderName: 'Alice Johnson' },\n      { id: '4', text: 'That sounds interesting! What kind of projects?', sender: 'self', timestamp: '2:28 PM' },\n      { id: '5', text: 'Mostly web development stuff. Building some cool apps!', sender: 'other', timestamp: '2:30 PM', senderName: 'Alice Johnson' }\n    ],\n    '2': [\n      { id: '1', text: 'Thanks for the help yesterday', sender: 'other', timestamp: '1:10 PM', senderName: 'Bob Smith' },\n      { id: '2', text: 'No problem at all! Happy to help', sender: 'self', timestamp: '1:12 PM' },\n      { id: '3', text: 'The solution worked perfectly', sender: 'other', timestamp: '1:15 PM', senderName: 'Bob Smith' }\n    ],\n    '3': [\n      { id: '1', text: 'See you at the meeting tomorrow', sender: 'other', timestamp: '12:40 PM', senderName: 'Carol Davis' },\n      { id: '2', text: 'Absolutely! What time was it again?', sender: 'self', timestamp: '12:42 PM' },\n      { id: '3', text: '10 AM in the conference room', sender: 'other', timestamp: '12:45 PM', senderName: 'Carol Davis' }\n    ],\n    '4': [\n      { id: '1', text: 'The project looks great!', sender: 'other', timestamp: '11:25 AM', senderName: 'David Wilson' },\n      { id: '2', text: 'Thank you! I put a lot of work into it', sender: 'self', timestamp: '11:27 AM' },\n      { id: '3', text: 'It really shows. Excellent job!', sender: 'other', timestamp: '11:30 AM', senderName: 'David Wilson' }\n    ],\n    '5': [\n      { id: '1', text: 'Can you send me the files?', sender: 'other', timestamp: 'Yesterday', senderName: 'Emma Brown' },\n      { id: '2', text: 'Sure! I\\'ll send them right now', sender: 'self', timestamp: 'Yesterday' }\n    ],\n    '6': [\n      { id: '1', text: 'Perfect, let\\'s do it', sender: 'other', timestamp: 'Yesterday', senderName: 'Frank Miller' },\n      { id: '2', text: 'Great! I\\'ll get started on it', sender: 'self', timestamp: 'Yesterday' }\n    ],\n    '7': [\n      { id: '1', text: 'Happy birthday! 🎉', sender: 'other', timestamp: 'Monday', senderName: 'Grace Lee' },\n      { id: '2', text: 'Thank you so much! 😊', sender: 'self', timestamp: 'Monday' }\n    ]\n  }\n\n  useEffect(() => {\n    // Check if user is logged in\n    const userData = localStorage.getItem('user')\n    if (!userData) {\n      router.push('/login')\n      return\n    }\n    setUser(JSON.parse(userData))\n\n    // Load contact and messages\n    const currentContact = contacts[chatId]\n    if (!currentContact) {\n      router.push('/chats')\n      return\n    }\n\n    setContact(currentContact)\n    setMessages(mockMessages[chatId] || [])\n    setIsLoading(false)\n  }, [chatId, router])\n\n  useEffect(() => {\n    // Scroll to bottom when messages change\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' })\n  }, [messages])\n\n  // Simulate receiving messages\n  useEffect(() => {\n    if (!contact || messages.length === 0) return\n\n    const interval = setInterval(() => {\n      // Randomly send a message from the contact (10% chance every 10 seconds)\n      if (Math.random() < 0.1) {\n        const responses = [\n          'That\\'s interesting!',\n          'I see what you mean',\n          'Sounds good to me',\n          'Let me think about that',\n          'Great idea!',\n          'I agree with you',\n          'That makes sense'\n        ]\n        \n        const randomResponse = responses[Math.floor(Math.random() * responses.length)]\n        const newMessage: Message = {\n          id: Date.now().toString(),\n          text: randomResponse,\n          sender: 'other',\n          timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\n          senderName: contact.name\n        }\n        \n        setMessages(prev => [...prev, newMessage])\n      }\n    }, 10000) // Check every 10 seconds\n\n    return () => clearInterval(interval)\n  }, [contact, messages.length])\n\n  const handleSendMessage = (messageText: string) => {\n    const newMessage: Message = {\n      id: Date.now().toString(),\n      text: messageText,\n      sender: 'self',\n      timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n    }\n\n    setMessages(prev => [...prev, newMessage])\n  }\n\n  if (isLoading || !user || !contact) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center\">\n          <p className=\"text-gray-600\">Loading chat...</p>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"flex h-screen\">\n      <ChatSidebar selectedChatId={chatId} />\n      \n      {/* Chat Area */}\n      <div className=\"flex-1 flex flex-col\">\n        <ChatHeader contactName={contact.name} />\n        \n        {/* Messages Area */}\n        <ScrollArea className=\"flex-1 bg-gray-50\">\n          <div className=\"p-4\">\n            {messages.length === 0 ? (\n              <div className=\"text-center text-gray-500 mt-8\">\n                <p>No messages yet. Start the conversation!</p>\n              </div>\n            ) : (\n              messages.map((message) => (\n                <ChatMessage\n                  key={message.id}\n                  message={message.text}\n                  sender={message.sender}\n                  timestamp={message.timestamp}\n                  senderName={message.senderName}\n                />\n              ))\n            )}\n            <div ref={messagesEndRef} />\n          </div>\n        </ScrollArea>\n        \n        <ChatInput onSendMessage={handleSendMessage} />\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}